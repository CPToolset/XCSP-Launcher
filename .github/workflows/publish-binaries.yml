name: Build and Release Binaries

on:
  push:
    tags:
      - "v*"

jobs:
  build-binaries:
    name: Build Binaries and Packages
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            sudo apt-get update
            sudo apt-get install -y ruby ruby-dev build-essential fpm snapcraft
            gem install --no-document fpm
          fi
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            choco install chocolatey --yes
          fi
          if [[ "${{ runner.os }}" == "macOS" ]]; then
            brew install fpm
          fi

      - name: Build binary
        run: pyinstaller --onefile bin/main.py --name xcsp

      - name: Generate snapcraft.yaml (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sed "s/__VERSION__/${GITHUB_REF_NAME#v}/g" snap/snapcraft.yaml.template > snap/snapcraft.yaml
          snapcraft
          snapcraft login --with ${{ secrets.SNAPCRAFT_LOGIN_FILE }}
          snapcraft push *.snap
      - name: Create .deb package (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir -p build-deb/usr/local/bin
          cp dist/xcsp build-deb/usr/local/bin/xcsp
          fpm -s dir -t deb -n xcsp-launcher -v ${GITHUB_REF_NAME#v} --prefix=/ -C build-deb .

      - name: Create Chocolatey package (Windows only)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          mkdir -p chocolatey/tools
          Copy-Item dist/xcsp.exe chocolatey/tools/xcsp.exe
          Copy-Item chocolatey/chocolateyInstall.ps1 chocolatey/tools/chocolateyInstall.ps1
          $nuspec = Get-Content chocolatey/xcsp-launcher.nuspec.template
          $nuspec = $nuspec -replace '__VERSION__', '${{ github.ref_name }}'
          $nuspec | Set-Content chocolatey/xcsp-launcher.nuspec
          choco pack chocolatey/xcsp-launcher.nuspec
          choco push chocolatey/xcsp-launcher.*.nupkg --api-key ${{ secrets.CHOCOLATEY_API_KEY }} --source https://push.chocolatey.org/
#      - name: Create Homebrew Formula (macOS only)
#        if: matrix.os == 'macos-latest'
#        run: |
#          mkdir -p brew
#          echo "class XcspLauncher < Formula
#  desc \"XCSP3 Solver Launcher\"
#  homepage \"https://github.com/CPToolset/xcsp-launcher\"
#  url \"https://github.com/CPToolset/xcsp-launcher/releases/download/${GITHUB_REF_NAME}/xcsp-macos\"
#  version \"${GITHUB_REF_NAME#v}\"
#  sha256 \"$(shasum -a 256 dist/xcsp | awk '{print $1}')\"
#
#  def install
#    bin.install \"xcsp-macos\" => \"xcsp\"
#  end
#end
#" > brew/xcsp-launcher.rb

      - name: Upload binaries to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/xcsp*
            *.deb
            *.snap
            chocolatey/*.nupkg
            brew/*.rb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
